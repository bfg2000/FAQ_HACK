
. Инструкции php заключаются в 
| <?php… ?>

| <?
| код PHP
| ?>

| <%
| код PHP
| %>

| <SCRIPT LANGUAGE=”php”>
| код PHP
| </SCRIPT>

. Подключение файлов
| include(‘/path/to/file‘);            #при обнаружении ошибки выдают 
| include_once(‘/path/to/file’);       #сообщение и продолж исполнен сценария

| reqiure(‘/path/to/file’);            #при обнаружении ошибки выдают сообщ
| reqiure_once(‘/path/to/file’);       #и прекращают исполнен сценарий

| include_once(‘/path/to/file’);       #подключают файл
| reqiure_once(‘/path/to/file’);       #только один раз

| http://www.example.com/index.php?file=main.html    #все что после ? - это параметры

. Безопасность входных данных
Например входные данные проверяются в header.php.
Если header.php вызывается через index.php то входные данные проверяются, но если напрямую обратится к footer.php, который не подключает header.php то есть вариант ломануть сайт.

. В PHP не указывается тип создаваемых переменных.
Тип определяется интерпретатором.
| $var = 4;			//число
| $var = 3.14			//вещественное число
| $var = ‘это строка’	//строка
| $var = ‘45’			//строка

| isset($var) - проверяет присвоено ли значение переменной $var
| define(‘PI’, 3.14) - создает константу PI (константы неизменны на всем времени ее жизни)

. Операции сравнения:
if - else
if - elseif

| switch (переменная)	# если после сравнения if-else выполняется            
| {
|     case значение-1;
|         операторы-1;
|         break;
|     case значение-2;
|         операторы-2;
|         break;
| [default; оператор]
| }

. Классы:
| ![Image alt](https://github.com/bfg2000/FAQ_HACK/blob/main/php/images/1.png) 

. включить отображение ошибок: php.ini - error_reporting установить параметр E_ALL

. Переменные окружения:
DOUMENT_ROOT - путь к каталогу на сервере, где расположен сценарий
SCRIPT_FILENAME - путь к исполняемому файлу на сервере
SERVER_ADDR - IP-адрес сервера
SERVER_PORT - порт сервера 
SERVER_NAME - имя хоста сервера
SERVER_PROTOCOL - версия HTTP-протокола
REMOTE_ADDR - IP-адрес компа, запросившего сценарий
REMOTE_PORT - порт удаленного компа с которым установлено соединение
REQUEST_METHOD - метод (GET, POST) с помощью которого запрошен сценарий
REQUEST_URL - URL-путь к файлу без имени сервера
QUERTY_STRING - строка запроса которая содержит список параметров, переданных запросу. Параметры разделены амперсандами (&). 
HTTP_HOST - имя сервера, может совпадать с SERVER_NAME
HTTP_USER_AGENT - строка идентифицирующая браузер
HTTP_ACCEPT - перечень файлов которые может обрабатывать клиент

. Вывод на экран значение переменных:
| <?= $_SERVER(‘DOCUMENT_ROOT’)?>
| <?= $_SERVER(‘SCRIPT_FILENAME’)?>


. isset() - сравнение переменной  на существование значения. Если true, то переменная не существует.
. type=”hidden” - тип (невидимый). Создает невидимое поле (например поле ввода)

параметры, передаваемые методом POST доступны ч\з массив $_POST(‘имя_переменной’)
параметры, передаваемые методом GET доступны ч\з массив $_GET(‘имя_переменной’)

Глобальные переменные принимаются php по методу GET, даже если в скрипте  указан метод POST. 
Также, по умолчанию в php, если переменная не объявлена, но происходит запрос к ней то она создается с тем параметром который передается в запросе. 

. session_star() - авторизация пользователя на сайте.
Результат  - true или false
Значения переменных помещается в массив $_SESSION[имя переменной] = значение

. Сеансы
session_start() - функия для запуска сеанса пользователя
| $_SESSION("имя переменной") = згачение;

. SID - идентификатор сеанса.  После запуска сеанса SID сохраняется в cookie и каждая полседующая страница после выполнения session_start() находит SID и ч\з него получает доступ к сеансовым параметрам.

. Cookies
| int setcookie {
|  string cookiename       #имя переменной, обязательный параметр
|  [, string value]        #значение переменной
|  [, integer lifetime]    #время жизни
|  [, string path]         #путь
|  [, string domain]       #домен
|  [, integer secure]      #параметр безопасности: 0-разреш прд по http, 1-запрещена
| }

. Удаление cookie - необходимо установить параметр с нужным именем и указать нулевое значение жизни.
| setcookie("access");

или указать время жизни в прощлом
| setcookie("access", 0, mktime(0,0,0,1,1,2000));

Работу с cookie необходимо реализовывать в самом начале сценария. Если до php-кода, устанавливающего cookie будет присутствовать html-код, то код выдаст ошибку.

. Файлы

. Открытие файла
fopen() - функция открытия файла

| int fopen(string filename, string mode [, int use_include_path])

. mode - режим открытия файла, принимает занчения:
  r - чтение
  r+ - чтение и запись
  w - запись, если файл существует, то все содержимое уничтожается
  w+ - чтение и запись, если существует, то все содержимое уничтожается
  a - открыть файл для записи, не уничтожает содержимое, дописывает в конец
  a+ - чтение и запись, дописывает в конец
  b - обрабатывает бинарный файл, необходимо для работы с бинарниками windows
  
. use_include_path - искать файл в каталогах, указанных в директиве include_path конфигурационного файла php.ini
Если открываемый файл не существует, то он будет создан (при наличии прав на запись у сервера)

. Закрытие файла
| int fclose (int f)
Функции передается дескриптор закрываемого файла. Если успешно возвращает true, иначе false.

. Чтение данных
| fread()
| fgetc()
| fgets()
| fgetss()

. string read(int f, int lenght)
Параметры:
- дескриптор файла из котрого надо производить чтение
- кол-во необходимых символов
При вызове ф-ции указатель текущей позиции смещается в конец прочитанных данных и при следующем вызове ф-ции будут читаться следующие данные.

. string fgetc(int f)
Возвращает один символ из файла, поэтому указывается только дескриптор файла из которого надо читать.

. string fgets(int f, int lenght)
Читает файл до символа перевода строки.

. string fgetss(int f, lenght[, string allowable])
allowable - список разрешенных тегов через запятую.
Читает файл до символа перевода строки, при этом удаляет из прочитанных данных все HTML и PHPтеги.

| array file(string filename [, int use_include_path]) - весь файл разбивается в массив

. Запись данных
| int fwrite(int f,stringws [, int lenght])

Параметры:
- дескриптор файла
- строка которую надо записать
- кол-во записываемых данных, если параметр не задан, то будет записана вся сторка

Если запись данных успешна, то true иначе false
Данные пишутся в текущую позиицю. 

. Позиционриовние в файле
| leof() - возвращает true, если текущая позиция соответсвует концу фала, иначе false.
| int fseek(int f, int offset [, int whence]) - устанавливает курсор в соответсвующую позицию
f - дескриптор файла
offsset - кол-во символов на которое нужно передвинуть указатель. Направление движения зависит от последнего параметра функции
whence - откуда и куда надо перемещаться:
- SEEK_SET - движение с начала файла (по умолчанию)
- SEEK_CUR - движение от текущей позиции. Двигаться в начало указать отрицательное значение
- SEEK_END - движение от конца файла.

| ftell() - определяет текущую позицию, возвращает кол-во символов от начала файла.
| rewind() - Переместиться в начало файла.
 







  
